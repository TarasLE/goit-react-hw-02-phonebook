[{"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\index.js":"1","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\reportWebVitals.js":"2","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\App.js":"3","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\Filter\\Filter.js":"4","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\contactform\\ContactForm.js":"5","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\Contactform\\ContactForm.js":"6","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\ContactList\\ContactList.js":"7"},{"size":340,"mtime":1610990471786,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1572,"mtime":1610991191144,"results":"11","hashOfConfig":"9"},{"size":773,"mtime":1610993151135,"results":"12","hashOfConfig":"9"},{"size":4202,"mtime":1610971949957,"results":"13","hashOfConfig":"9"},{"size":5384,"mtime":1610988093285,"results":"14","hashOfConfig":"9"},{"size":1160,"mtime":1610993139321,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fknc5d",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\index.js",["32","33"],"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\reportWebVitals.js",[],["34","35"],"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\App.js",[],"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\Filter\\Filter.js",[],"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\contactform\\ContactForm.js",["36","37"],"H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\Contactform\\ContactForm.js",["38","39","40"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport { Notification } from 'react-pnotify'\r\n\r\nexport default class ContactForm extends Component {\r\n    static defaultProps = { addContact: '' }\r\n    static propTypes = {}\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    addContact = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.contacts.unshift(contact)\r\n            this.props.refreshState(this.props.contacts)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (this.props.contacts.length == 0) {\r\n            return\r\n        } else if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() === this.state.name.toLowerCase()\r\n                )\r\n            })\r\n        ) {\r\n            this.setState({ alert: true })\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        this.setState({ alert: false })\r\n    }\r\n\r\n    alert = false\r\n    render() {\r\n        const sameContact = this.state.name\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <button type=\"button\" onClick={this.addContact}>\r\n                    Add contact\r\n                </button>\r\n                {this.state.alert && (\r\n                    <div className={styles.Notification}>\r\n                        <h2>{sameContact} is already in contacts</h2>\r\n                        <h3>Please check name and try again</h3>\r\n                        <button type=\"button\" onClick={this.alertState}>\r\n                            Close Notification\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------------------\r\n// ---------------------------------------------------------------------------------------------------------------------------\r\n// export default function ContactForm({\r\n//     name,\r\n//     handleContact,\r\n//     addContact,\r\n//     contacts,\r\n//     number,\r\n//     filteredElements,\r\n// }) {\r\n//     return (\r\n//         <div className={styles.Container}>\r\n//             {/* <h3 className={styles.InputName}>Name</h3> */}\r\n//             <form>\r\n//                 <label>\r\n//                     Name <br />\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={name}\r\n//                         name=\"name\"\r\n//                         onChange={handleContact}\r\n//                         // onSubmit={addContact}\r\n//                     />\r\n//                 </label>\r\n//                 <br />\r\n//                 <label>\r\n//                     Number <br />\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={number}\r\n//                         name=\"number\"\r\n//                         onChange={handleContact}\r\n//                     />\r\n//                 </label>\r\n//             </form>\r\n//             <button type=\"button\" onClick={addContact}>\r\n//                 Add contact\r\n//             </button>\r\n//             <h1>Contacts</h1>\r\n//             <ul>\r\n//                 {contacts.map((contact) => (\r\n//                     <li key={contact.id}>\r\n//                         {contact.name} : {contact.number}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//             {/* <br />\r\n//             <label>\r\n//                 Find contacts by Name\r\n//                 <br />\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={number}\r\n//                     name=\"number\"\r\n//                     onChange={handleContact}\r\n//                 />\r\n//             </label> */}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// ContactForm.propTypes = {\r\n//     contacts: PropTypes.array.isRequired,\r\n// }\r\n","H:\\MY_Space\\Go-It\\Main_Course\\REACT\\react_ht2\\goit-react-hw-02-phonebook\\src\\components\\ContactList\\ContactList.js",["41","42"],{"ruleId":"43","severity":1,"message":"44","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":23},{"ruleId":"43","severity":1,"message":"47","line":9,"column":7,"nodeType":"45","messageId":"46","endLine":9,"endColumn":10},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"43","severity":1,"message":"52","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"43","severity":1,"message":"53","line":28,"column":15,"nodeType":"45","messageId":"46","endLine":28,"endColumn":22},{"ruleId":"43","severity":1,"message":"52","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"43","severity":1,"message":"54","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":40,"column":40,"nodeType":"57","messageId":"58","endLine":40,"endColumn":42},{"ruleId":"43","severity":1,"message":"52","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"55","severity":1,"message":"59","line":8,"column":31,"nodeType":"57","messageId":"58","endLine":8,"endColumn":33},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'arr' is assigned a value but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'PropTypes' is defined but never used.","'contact' is assigned a value but never used.","'Notification' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]