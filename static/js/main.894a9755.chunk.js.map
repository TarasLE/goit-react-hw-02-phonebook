{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css","components/Contactform/ContactForm.module.css","components/Contactform/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","alert","handleContact","event","currentTarget","value","setState","addContact","preventDefault","checkContact","contact","id","shortid","generate","props","contacts","unshift","refreshState","clearInput","length","find","toLowerCase","alertState","sameContact","this","className","styles","Container","type","onChange","FormInput","onClick","FormBtn","Notification","Component","defaultProps","ContactList","deleteContact","contactId","test","filter","map","Contact","ContactInfo","DeleteBtn","Filter","InputContainer","FilterHeader","FilterInput","App","refreshContactsList","contactFilter","normalizedFilter","filteredElements","includes","ReactDOM","render","document","querySelector","console","log","0","6","9","4","7"],"mappings":"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","file":"static/js/main.894a9755.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactList_Container__2y4u7\",\"Contact\":\"ContactList_Contact__tjKfg\",\"DeleteBtn\":\"ContactList_DeleteBtn__4MaCp\",\"ContactInfo\":\"ContactList_ContactInfo__ZG9DZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__reLkS\",\"InputContainer\":\"Filter_InputContainer__382SX\",\"FilterInput\":\"Filter_FilterInput__n6O4N\",\"FilterHeader\":\"Filter_FilterHeader__25KuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__3_n88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__1If1P\",\"InputName\":\"ContactForm_InputName__3upLn\",\"Notification\":\"ContactForm_Notification__QhX9H\",\"FormInput\":\"ContactForm_FormInput__14yBi\",\"FormBtn\":\"ContactForm_FormBtn__2SVly\"};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport { Notification } from 'react-pnotify'\r\n\r\nexport default class ContactForm extends Component {\r\n    static defaultProps = { addContact: '' }\r\n    static propTypes = {}\r\n\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    addContact = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.contacts.unshift(contact)\r\n            this.props.refreshState(this.props.contacts)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (this.props.contacts.length == 0) {\r\n            return\r\n        } else if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() === this.state.name.toLowerCase()\r\n                )\r\n            })\r\n        ) {\r\n            this.setState({ alert: true })\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        this.setState({ alert: false })\r\n    }\r\n\r\n    alert = false\r\n    render() {\r\n        const sameContact = this.state.name\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.addContact}\r\n                    className={styles.FormBtn}\r\n                >\r\n                    Add contact\r\n                </button>\r\n                {this.state.alert && (\r\n                    <div className={styles.Notification}>\r\n                        <h2>{sameContact} is already in contacts</h2>\r\n                        <h3>Please check name and try again</h3>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={this.alertState}\r\n                            className={styles.FormBtn}\r\n                        >\r\n                            Close Notification\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\n\r\nexport default class ContactList extends Component {\r\n    deleteContact = (contactId) => {\r\n        const test = this.props.contacts.filter((contact) => {\r\n            return contact.id != contactId\r\n        })\r\n        this.props.refreshState(test)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Container}>\r\n                <ul>\r\n                    {this.props.contacts.map((contact) => (\r\n                        <li key={contact.id} className={styles.Contact}>\r\n                            <span className={styles.ContactInfo}>\r\n                                {contact.name} : {contact.number}\r\n                            </span>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => this.deleteContact(contact.id)}\r\n                                className={styles.DeleteBtn}\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Filter.module.css'\r\n\r\nexport default function Filter({ value, filter }) {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <label className={styles.InputContainer}>\r\n                <span className={styles.FilterHeader}>\r\n                    Find contacts by Name\r\n                </span>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={filter}\r\n                    className={styles.FilterInput}\r\n                />\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n}\r\n","import React, { Component } from 'react'\nimport ContactForm from './components/Contactform/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport styles from './App.module.css'\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n\n    refreshContactsList = (state) => {\n        this.setState({\n            contacts: state,\n        })\n    }\n\n    handleContact = (event) => {\n        const { name, value } = event.currentTarget\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    contactFilter = (event) => {\n        this.setState({ filter: event.currentTarget.value })\n    }\n\n    render() {\n        const normalizedFilter = this.state.filter.toLowerCase()\n        const filteredElements = this.state.contacts.filter((contact) =>\n            contact.name.toLowerCase().includes(normalizedFilter)\n        )\n        return (\n            <div className={styles.Container}>\n                <h1>Phonebook</h1>\n\n                <ContactForm\n                    addContact={this.addContact}\n                    contacts={this.state.contacts}\n                    refreshState={this.refreshContactsList}\n                />\n                <h1>Contacts</h1>\n                <Filter value={this.state.filter} filter={this.contactFilter} />\n                <ContactList\n                    contacts={filteredElements}\n                    refreshState={this.refreshContactsList}\n                />\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n\nconst arr = [0, 6, 9, 4, 7]\nconst arr2 = [{ 0: 1 }, { 6: 1 }, { 9: 5 }, { 4: 7 }, { 7: 8 }]\n// arr2.delete(2)\nconsole.log(arr2)\n"],"sourceRoot":""}